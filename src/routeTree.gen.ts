/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as PublicPrecingRouteImport } from './routes/_public/precing'
import { Route as PrivateDashboardIndexRouteImport } from './routes/_private/dashboard/index'
import { Route as AuthSignupIndexRouteImport } from './routes/_auth/signup/index'
import { Route as AuthResetPassIndexRouteImport } from './routes/_auth/reset-pass/index'
import { Route as AuthLoginIndexRouteImport } from './routes/_auth/login/index'

const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicPrecingRoute = PublicPrecingRouteImport.update({
  id: '/_public/precing',
  path: '/precing',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateDashboardIndexRoute = PrivateDashboardIndexRouteImport.update({
  id: '/_private/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupIndexRoute = AuthSignupIndexRouteImport.update({
  id: '/_auth/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPassIndexRoute = AuthResetPassIndexRouteImport.update({
  id: '/_auth/reset-pass/',
  path: '/reset-pass/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/_auth/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/precing': typeof PublicPrecingRoute
  '/': typeof PublicIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/reset-pass': typeof AuthResetPassIndexRoute
  '/signup': typeof AuthSignupIndexRoute
  '/dashboard': typeof PrivateDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/precing': typeof PublicPrecingRoute
  '/': typeof PublicIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/reset-pass': typeof AuthResetPassIndexRoute
  '/signup': typeof AuthSignupIndexRoute
  '/dashboard': typeof PrivateDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_public/precing': typeof PublicPrecingRoute
  '/_public/': typeof PublicIndexRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/reset-pass/': typeof AuthResetPassIndexRoute
  '/_auth/signup/': typeof AuthSignupIndexRoute
  '/_private/dashboard/': typeof PrivateDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/precing'
    | '/'
    | '/login'
    | '/reset-pass'
    | '/signup'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/precing' | '/' | '/login' | '/reset-pass' | '/signup' | '/dashboard'
  id:
    | '__root__'
    | '/_public/precing'
    | '/_public/'
    | '/_auth/login/'
    | '/_auth/reset-pass/'
    | '/_auth/signup/'
    | '/_private/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PublicPrecingRoute: typeof PublicPrecingRoute
  PublicIndexRoute: typeof PublicIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthResetPassIndexRoute: typeof AuthResetPassIndexRoute
  AuthSignupIndexRoute: typeof AuthSignupIndexRoute
  PrivateDashboardIndexRoute: typeof PrivateDashboardIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/precing': {
      id: '/_public/precing'
      path: '/precing'
      fullPath: '/precing'
      preLoaderRoute: typeof PublicPrecingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/dashboard/': {
      id: '/_private/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup/': {
      id: '/_auth/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/reset-pass/': {
      id: '/_auth/reset-pass/'
      path: '/reset-pass'
      fullPath: '/reset-pass'
      preLoaderRoute: typeof AuthResetPassIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  PublicPrecingRoute: PublicPrecingRoute,
  PublicIndexRoute: PublicIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthResetPassIndexRoute: AuthResetPassIndexRoute,
  AuthSignupIndexRoute: AuthSignupIndexRoute,
  PrivateDashboardIndexRoute: PrivateDashboardIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
